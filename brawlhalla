#!/bin/bash

#######################################################################
################################ UTILS ################################
#######################################################################

prog_name=$(basename "$0")

ask_confirm() {
    # ask for confirm with message
    answer=""
    # loop until a real answer is given
    while true; do
        read -r -p "Enter [yes/no]: " answer
        if [ "$answer" == "yes" ]; then
            return 0
        elif [ "$answer" == "no" ]; then
            return 1
        else
            echo "Please answer with yes or no."
        fi
    done
}

#####################################################################################
################################ SUBCOMMAND profiles ################################
#####################################################################################

PROFILES_DIR="$HOME/.brawlhalla/profiles"
ACTIVE_PROFILE_DIR="$(wslpath "$(wslvar APPDATA)")/BrawlhallaAir/Local Store/"

sub_profiles_list() {
    for file in "$PROFILES_DIR"/*; do
        if [ -d "$file" ]; then
            basename "$file"
        fi
    done
}

sub_profiles_save() {
    save_name="$1"
    selected_profile_dir="$PROFILES_DIR/$save_name"
    if [ -d "$selected_profile_dir" ]; then
        echo "Profile $save_name already exists. Do you want to overwrite the existing profile?"
        if ! ask_confirm; then
            echo "Did not save profile."
            return
        fi
    fi
    mkdir -p "$selected_profile_dir"
    rm -rf --preserve-root "${selected_profile_dir:?}"/* 2>/dev/null
    cp -rf "$ACTIVE_PROFILE_DIR/"* "$selected_profile_dir" >/dev/null
    echo "Saved active profile to $save_name."
}

sub_profiles_load() {
    save_name="$1"
    selected_profile_dir="$PROFILES_DIR/$save_name"
    if ! [ -d "$selected_profile_dir" ]; then
        echo "Profile $save_name does not exist."
        return
    fi
    cp -rf "$selected_profile_dir"/* "$ACTIVE_PROFILE_DIR" >/dev/null
    echo "Profile $save_name is now active."
}

sub_profiles_delete() {
    save_name="$1"
    selected_profile_dir="$PROFILES_DIR/$save_name"
    if ! [ -d "$selected_profile_dir" ]; then
        echo "Profile $save_name does not exist."
        return
    fi
    echo "Are you sure you want to delete profile $save_name?"
    if ! ask_confirm; then
        echo "Did not delete profile."
        return
    fi
    rm -rf "$selected_profile_dir"
    echo "Profile $save_name was deleted."
}

sub_profiles_help() {
    echo "Usage: $prog_name profiles <subcommand>"
    echo ""
    echo "Subcommands:"
    echo "list"
    echo "save <save_name>"
    echo "load <profile>"
    echo "delete <profile>"
    echo ""
}

sub_profiles() {
    subcommand="$1"
    case "$subcommand" in
    "" | "-h" | "--help")
        sub_profiles_help
        ;;
    "list" | "save" | "load" | "delete")
        shift
        sub_profiles_"${subcommand}" "$@"
        ;;
    *)
        echo "Error: '$subcommand' is not a known subcommand." >&2
        echo "Run '$prog_name --help' for a list of known subcommands." >&2
        exit 1
        ;;
    esac
}

##################################################################################
################################ SUBCOMMAND track ################################
##################################################################################

TRACK_DIR="$HOME/.brawlhalla/tracking"
TRACK_RANDOM_FILE="$HOME/.brawlhalla/tracking/random.txt"
ALL_LEGENDS=";bodvar;cassidy;orion;lord_vraxx;gnash;queen_nai;hattori;sir_roland;scarlet;thatch;ada;sentinel;lucien;teros;brynn;asuri;barraza;ember;azoth;koji;ulgrim;diana;jhala;kor;wu_shang;val;ragnir;cross;mirage;nix;mordex;yumiko;artemis;caspian;sidra;xull;kaya;isaiah;jiro;lin_fei;zariel;rayman;dusk;fait;thor;petra;vector;volkov;onyx;jaeyun;mako;magyar;reno;munin;arcadia;ezio;tezca;thea;red_raptor;loki;seven;vivi;imugi;king_zuva;priya;"

sub_track_random() {
    legend_name="$1"
    if [[ $ALL_LEGENDS != *";$legend_name;"* ]]; then
        echo "Error: '$legend_name' is not a valid legend name." >&2
        exit 1
    fi
    mkdir -p "$TRACK_DIR"
    echo "$legend_name" >>"$TRACK_RANDOM_FILE"
    echo "Tracked random legend $legend_name."
}

sub_track_help() {
    echo "Usage: $prog_name track <subcommand>"
    echo ""
    echo "Subcommands:"
    echo "random <legend_name>"
    echo ""
}

sub_track() {
    subcommand="$1"
    case "$subcommand" in
    "" | "-h" | "--help")
        sub_track_help
        ;;
    "random")
        shift
        sub_track_"${subcommand}" "$@"
        ;;
    *)
        echo "Error: '$subcommand' is not a known subcommand." >&2
        echo "Run '$prog_name --help' for a list of known subcommands." >&2
        exit 1
        ;;
    esac
}

#################################################################################
################################ SUBCOMMAND find ################################
#################################################################################

WEAPON_LIST=";sword;katars;blasters;bow;gauntlets;scythe;hammer;greatsword;spear;orb;axe;lance;chakram;"
declare -A WEAPONS_TO_LEGEND=( ["hammer_sword"]="bodvar" ["blasters_hammer"]="cassidy" ["lance_spear"]="orion" ["lance_blasters"]="lord vraxx" ["hammer_spear"]="gnash" ["spear_katars"]="queen nai" ["sword_spear"]="hattori" ["lance_sword"]="sir roland" ["hammer_lance"]="scarlet" ["sword_blasters"]="thatch" ["blasters_spear"]="ada" ["hammer_katars"]="sentinel" ["katars_blasters"]="lucien" ["axe_hammer"]="teros" ["axe_spear"]="brynn" ["katars_sword"]="asuri" ["axe_blasters"]="barraza" ["bow_katars"]="ember" ["bow_axe"]="azoth" ["bow_sword"]="koji" ["axe_lance"]="ulgrim" ["bow_blasters"]="diana" ["axe_sword"]="jhala" ["gauntlets_hammer"]="kor" ["gauntlets_spear"]="wu shang" ["gauntlets_sword"]="val" ["katars_axe"]="ragnir" ["blasters_gauntlets"]="cross" ["scythe_spear"]="mirage" ["scythe_blasters"]="nix" ["scythe_gauntlets"]="mordex" ["bow_hammer"]="yumiko" ["lance_scythe"]="artemis" ["gauntlets_katars"]="caspian" ["cannon_sword"]="sidra" ["cannon_axe"]="xull" ["spear_bow"]="kaya" ["cannon_blasters"]="isaiah" ["sword_scythe"]="jiro" ["katars_cannon"]="lin fei" ["gauntlets_bow"]="zariel" ["gauntlets_axe"]="rayman" ["spear_orb"]="dusk" ["scythe_orb"]="fait" ["hammer_orb"]="thor" ["gauntlets_orb"]="petra" ["lance_bow"]="vector" ["axe_scythe"]="volkov" ["gauntlets_cannon"]="onyx" ["sword_greatsword"]="jaeyun" ["katars_greatsword"]="mako" ["hammer_greatsword"]="magyar" ["blasters_orb"]="reno" ["bow_scythe"]="munin" ["spear_greatsword"]="arcadia" ["sword_orb"]="ezio" ["boots_gauntlets"]="tezca" ["boots_lance"]="thea" ["boots_orb"]="redraptor" ["katars_scythe"]="loki" ["spear_cannon"]="seven" ["boots_blasters"]="vivi" ["axe_greatsword"]="imugi" ["hammer_boots"]="king zuva" ["chakram_sword"]="priya" ["sword_hammer"]="bodvar" ["hammer_blasters"]="cassidy" ["spear_lance"]="orion" ["blasters_lance"]="lord vraxx" ["spear_hammer"]="gnash" ["katars_spear"]="queen nai" ["spear_sword"]="hattori" ["sword_lance"]="sir roland" ["lance_hammer"]="scarlet" ["blasters_sword"]="thatch" ["spear_blasters"]="ada" ["katars_hammer"]="sentinel" ["blasters_katars"]="lucien" ["hammer_axe"]="teros" ["spear_axe"]="brynn" ["sword_katars"]="asuri" ["blasters_axe"]="barraza" ["katars_bow"]="ember" ["axe_bow"]="azoth" ["sword_bow"]="koji" ["lance_axe"]="ulgrim" ["blasters_bow"]="diana" ["sword_axe"]="jhala" ["hammer_gauntlets"]="kor" ["spear_gauntlets"]="wu shang" ["sword_gauntlets"]="val" ["axe_katars"]="ragnir" ["gauntlets_blasters"]="cross" ["spear_scythe"]="mirage" ["blasters_scythe"]="nix" ["gauntlets_scythe"]="mordex" ["hammer_bow"]="yumiko" ["scythe_lance"]="artemis" ["katars_gauntlets"]="caspian" ["sword_cannon"]="sidra" ["axe_cannon"]="xull" ["bow_spear"]="kaya" ["blasters_cannon"]="isaiah" ["scythe_sword"]="jiro" ["cannon_katars"]="lin fei" ["bow_gauntlets"]="zariel" ["axe_gauntlets"]="rayman" ["orb_spear"]="dusk" ["orb_scythe"]="fait" ["orb_hammer"]="thor" ["orb_gauntlets"]="petra" ["bow_lance"]="vector" ["scythe_axe"]="volkov" ["cannon_gauntlets"]="onyx" ["greatsword_sword"]="jaeyun" ["greatsword_katars"]="mako" ["greatsword_hammer"]="magyar" ["orb_blasters"]="reno" ["scythe_bow"]="munin" ["greatsword_spear"]="arcadia" ["orb_sword"]="ezio" ["gauntlets_boots"]="tezca" ["lance_boots"]="thea" ["orb_boots"]="redraptor" ["scythe_katars"]="loki" ["cannon_spear"]="seven" ["blasters_boots"]="vivi" ["greatsword_axe"]="imugi" ["boots_hammer"]="king zuva" ["sword_chakram"]="priya")

sub_find_help() {
    echo "Usage: $prog_name find <weapon1> <weapon2>"
    echo ""
    echo "tool for finding a legend with a specific weapon combination"
}

sub_find() {
    weapon1="$1"
    weapon2="$2"
    if [[ $WEAPON_LIST != *";$weapon1;"* ]]; then
        echo "Error: '$weapon1' is not a valid weapon name." >&2
        exit 1
    fi
    if [[ $WEAPON_LIST != *";$weapon2;"* ]]; then
        echo "Error: '$weapon2' is not a valid weapon name." >&2
        exit 1
    fi
    legend_name="${WEAPONS_TO_LEGEND["$weapon1"_"$weapon2"]}"
    if [ -z "$legend_name" ]; then
        echo "No legend found for weapons $weapon1 and $weapon2."
    else
        echo "Legend for weapons $weapon1 and $weapon2 is $legend_name."
    fi
}

######################################################################
################################ MAIN ################################
######################################################################

sub_help() {
    echo "Usage: $prog_name <subcommand>"
    echo ""
    echo "Subcommands:"
    echo "profiles"
    echo "track"
    echo ""
}

subcommand="$1"
case "$subcommand" in
"" | "-h" | "--help")
    sub_help
    ;;
"profiles")
    shift
    sub_"${subcommand}" "$@"
    ;;
"track")
    shift
    sub_"${subcommand}" "$@"
    ;;
"find")
    shift
    sub_"${subcommand}" "$@"
    ;;
*)
    echo "Error: '$subcommand' is not a known subcommand." >&2
    echo "Run '$prog_name --help' for a list of known subcommands." >&2
    exit 1
    ;;
esac
